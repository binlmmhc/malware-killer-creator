import os
import re
import sys

def create_windows_powershell(config_datas):
    if config_datas.killername:
        killer_handle = open("./output/"+config_datas.killername+".ps1", "w")
    else:
        return "create killer's psh file failed."
    
    common_functions = open("./creator/script_temple/common_function.ps1", "r").read()
    killer_handle.write(common_functions+"\n")
    
    for item_type in config_datas.all_items:
        deleted_items = config_datas.all_items[item_type]
        if "registry" in item_type:
            psh_delete_registry(killer_handle, deleted_items)
        if "schedule_task" in item_type:
            psh_delete_tasks(killer_handle, deleted_items)
        if "services" in item_type:
            psh_delete_services(killer_handle, deleted_items)
        if "process_names" in item_type:
            psh_kill_processes(killer_handle, deleted_items)
        if "files" in item_type:
            psh_delete_files(killer_handle, deleted_items)
        if "wmi" in item_type:
            psh_delete_wmi(killer_handle, deleted_items)

    killer_handle.close()

    return


def psh_delete_files(killer_handle, filenames):
    if not killer_handle:
        return "delete file by name failed."
    
    if len(filenames) <= 0:
        return
    
    killer_handle.write("#" + '*'*50 + "Deleted malicious files by powershell!" + '*'*50 + '\n')
    
    malicious_file_names = []
    malicious_file_namehashs = {}

    for file_type,file_item in filenames.items():
        if "name" in file_type:
            malicious_file_names.append(file_item)
        if "hash_" in file_type:
            matchname = re.match("^hash_\d{,10}_", file_type)
            if matchname:
                filename = file_type.replace(matchname.group(), "")
                malicious_file_namehashs[filename] = file_item
    
    if len(malicious_file_names) > 0:
        killer_handle.write("$delete_file_by_filenames = $true\n")
        killer_handle.write("$malicious_file_names = (\n")
        for file_name in malicious_file_names:
            if file_name != malicious_file_names[-1]:
                killer_handle.write("   " + '"' + file_name + '"' + ",\n")
            else:
                killer_handle.write("   " + '"' + file_name + '"' + "\n" + ")" + "\n")
        killer_handle.write("\n")
    else:
        killer_handle.write("$delete_file_by_filenames = $false\n")
    
    if len(malicious_file_namehashs) > 0:
        killer_handle.write("$delete_file_by_file_hash = $true\n")
        killer_handle.write("$malicious_file_namehashs = @{\n")
        keys = list(malicious_file_namehashs.keys())

        for file_name,file_hash in malicious_file_namehashs.items():  
            if file_name != keys[-1]:
                killer_handle.write("   " + '"' + file_name + '"="' + file_hash + '"' + ";\n" )
            else:
                killer_handle.write("   " + '"' + file_name + '"="' + file_hash + '"' + "\n" + "}" + "\n" )
        killer_handle.write("\n")
    
    clear_malicious_files_powershell = open("./creator/script_temple/clear_malicious_files.ps1", "r").read()
    killer_handle.write(clear_malicious_files_powershell)
    killer_handle.write("#" + '*'*50 + "Deleted malicious Files End Line" + '*'*50 + '\n\n')
    
    return 0

def psh_delete_registry(killer_handle, key_values):
    if not killer_handle:
        return "delete reg item failed."
    
    if len(key_values) <= 0:
        return
    
    killer_handle.write("#" + '*'*50 + "Deleted malicious registry by powershell!" + '*'*50 + '\n')
    for regkeyitem,regvalue in key_values.items():
        if regkeyitem[0:2] == "HK":
            regkeyitem = regkeyitem.replace("HKCL", "HKCU:")
            regkeyitem = regkeyitem.replace("HKCU", "HKCU:")
            regkeyitem = regkeyitem.replace("HKLM", "HKLM:")
            regkeyitem = regkeyitem.replace("HKUS", "HKUS:")
            regkeyitem = regkeyitem.replace("HKCC", "HKCC:")
            
        if regvalue != 0:
            killer_handle.write(r'Remove-ItemProperty -Path "' + regkeyitem + '" -Name "' + regvalue + '" -Confirm:$False -ErrorAction SilentlyContinue' + '\n')
        else:
            killer_handle.write(r'Remove-Item -Path "' + regkeyitem + '" -Confirm:$False -ErrorAction SilentlyContinue' + '\n')
    killer_handle.write("#" + '*'*50 + "Deleted malicious registry End Line" + '*'*50 + '\n\n')
    return 0

#service name is not display name
def psh_delete_services(killer_handle, srvnames):
    if not killer_handle:
        return "delete services by name failed."
    
    if len(srvnames) <= 0:
        return
    
    killer_handle.write("#" + '*'*50 + "Deleted malicious services by powershell!" + '*'*50 + '\n')

    malicious_service_names = []
    malicious_service_file_hashs = []

    for service_type, service_item in srvnames.items():
        if "name" in service_type:
            malicious_service_names.append(service_item)
        if "hash" in service_type:
            malicious_service_file_hashs.append(service_item)
    
    if len(malicious_service_names) > 0:
        killer_handle.write("$delete_service_by_service_name = $true\n")
        killer_handle.write("$malicious_service_names = (\n")
        for service_name in malicious_service_names:
            if service_name != malicious_service_names[-1]:
                killer_handle.write("   " + '"' + service_name + '"' + ",\n")
            else:
                killer_handle.write("   " + '"' + service_name + '"' + "\n" + ")" + "\n")
        killer_handle.write("\n")
    else:
        killer_handle.write("$delete_service_by_service_name = $false\n")
    
    if len(malicious_service_file_hashs) > 0:
        killer_handle.write("$delete_service_by_execute_file_hash = $true\n")
        killer_handle.write("$malicious_service_file_hashs = (\n")
        for service_filehash in malicious_service_file_hashs:
            if service_filehash !=  malicious_service_file_hashs[-1]:
                killer_handle.write("   " + '"' + service_filehash + '"' + ",\n")
            else:
                killer_handle.write("   " + '"' + service_filehash + '"' + "\n" + ")" + "\n")
        killer_handle.write("\n")
    else:
        killer_handle.write("$delete_servcie_by_execute_file_hash = $false\n")
    
    clear_malicious_service_powershell = open("./creator/script_temple/clear_malicious_services.ps1", "r").read()
    killer_handle.write(clear_malicious_service_powershell)
    killer_handle.write("#" + '*'*50 + "Deleted malicious service End Line" + '*'*50 + '\n\n')
    
    return 0

def psh_delete_tasks(killer_handle, tasknames):
    if not killer_handle:
        return "delete tasks by name failed."
    
    if len(tasknames) <= 0:
        return
    
    killer_handle.write("#" + '*'*50 + "Deleted malicious schedule task by powershell!" + '*'*50 + '\n')

    malicious_task_namepaths = []
    malicious_task_commands = []
    malicious_task_execute_file_hashs = []

    for tasktype, taskitem in tasknames.items():
        if "namepath" in tasktype:
            malicious_task_namepaths.append(taskitem)
        if "command" in tasktype:
            malicious_task_commands.append(taskitem)
        if "hash" in tasktype:
            malicious_task_execute_file_hashs.append(taskitem)
    
    if len(malicious_task_namepaths) > 0:
        killer_handle.write("$deleted_schedule_task_by_namepath = $True\n")
        killer_handle.write("$malicious_task_namepaths = (\n")
        for namepath in malicious_task_namepaths:
            if namepath != malicious_task_namepaths[-1]:
                killer_handle.write("   " + '"' + namepath + '"' + ",\n")
            else:
                killer_handle.write("   " + '"' + namepath + '"' + "\n" + ")" + "\n")
        killer_handle.write("\n")
    else:
        killer_handle.write("$deleted_schedule_task_by_namepath = $False\n")
    
    if len(malicious_task_commands) > 0:
        killer_handle.write("$deleted_schedule_task_by_action_command = $True\n")
        killer_handle.write("$malicious_task_commands = (\n")        
        for command in malicious_task_commands:
            if command != malicious_task_commands[-1]:
                killer_handle.write("   " + '"' + command + '"' + ",\n")
            else:
                killer_handle.write("   " + '"' + command + '"' + "\n" + ")" + "\n")
        killer_handle.write("\n")
    else:
        killer_handle.write("$deleted_schedule_task_by_action_command = $False\n")
    
    if len(malicious_task_execute_file_hashs) > 0:
        killer_handle.write("$deleted_schedule_task_by_execute_file_sha256 = $True\n")
        killer_handle.write("$malicious_task_execute_file_hashs = (\n")
        for filehash in malicious_task_execute_file_hashs:
            if filehash != malicious_task_execute_file_hashs[-1]:
                killer_handle.write("   " + '"' + filehash + '"' + ",\n")
            else:
                killer_handle.write("   " + '"' + filehash + '"' + "\n" + ")" + "\n")
        killer_handle.write("\n")
    else:
        killer_handle.write("$deleted_schedule_task_by_execute_file_sha256 = $False\n")
    killer_handle.write("\n")
    
    clear_malicious_tasks_powershell = open("./creator/script_temple/clear_malicious_tasks.ps1").read()
    killer_handle.write(clear_malicious_tasks_powershell)
    killer_handle.write("\n#" + '*'*50 + "Deleted Schedule Tasks End Line" + '*'*50 + '\n\n')


    return 0

def psh_kill_processes(killer_handle, processes):
    if not killer_handle:
        return "kill process by name failed."
    
    if len(processes) <= 0:
        return
    
    killer_handle.write("#" + '*'*50 + "Deleted malicious process by powershell!" + '*'*50 + '\n')

    malicious_process_names = []
    malicious_process_filehashs = []

    for process_type, process_item in processes.items():
        if "name" in process_type:
            malicious_process_names.append(process_item)
        if "hash_" in process_type:
            malicious_process_filehashs.append(process_item)
    
    if len(malicious_process_names) > 0:
        killer_handle.write("$kill_process_by_name = $true\n")
        killer_handle.write("$malicious_process_names = (\n")
        for process_name in malicious_process_names:
            if process_name != malicious_process_names[-1]:
                killer_handle.write("   " + '"' + process_name + '"' + ",\n")
            else:
                killer_handle.write("   " + '"' + process_name + '"' + "\n" + ")" + "\n")
        killer_handle.write("\n")
    else:
        killer_handle.write("$kill_process_by_name = $false\n")
    
    if len(malicious_process_filehashs) > 0:
        killer_handle.write("$kill_process_by_file_hash\n")
        killer_handle.write("$malicious_process_filehashs = (\n")
        for process_hash in malicious_process_filehashs:
            if process_hash != malicious_process_filehashs[-1]:
                killer_handle.write("   " + '"' + process_hash + '"' + ",\n")
            else:
                killer_handle.write("   " + '"' + process_hash + '"' + "\n" + ")" + "\n")
        killer_handle.write("\n")
    else:
        killer_handle.write("$kill_process_by_file_hash = $false")
    
    clear_malicious_process_powershell = open("./creator/script_temple/clear_malicious_process.ps1").read()
    killer_handle.write(clear_malicious_process_powershell)
    killer_handle.write("#" + '*'*50 + "Kill malicious process End Line" + '*'*50 + '\n\n')
    
    return 0

def psh_delete_wmi(killer_handle, wmi_items):
    if not killer_handle:
        return "kill process by name failed."
    
    if len(wmi_items) <= 0:
        return
    
    killer_handle.write("#" + '*'*50 + "Deleted malicious wmi by powershell!" + '*'*50 + '\n')

    malicious_wmi_eventfilter_names = []
    malicious_wmi_eventconsumer_commandlines = []

    for wmi_type, wmi_item in wmi_items.items():
        if "name" in wmi_type:
            malicious_wmi_eventfilter_names.append(wmi_item)
        if "commandline" in wmi_type:
            malicious_wmi_eventconsumer_commandlines.append(wmi_item)
    
    if len(malicious_wmi_eventfilter_names) > 0:
        killer_handle.write("$delete_wmi_by_wmi_eventfilter_name = $True\n")
        killer_handle.write("$malicious_wmi_eventfilter_names = (\n")
        for eventfilter_name in malicious_wmi_eventfilter_names:
            if eventfilter_name != malicious_wmi_eventfilter_names[-1]:
                killer_handle.write("   " + '"' + eventfilter_name + '"' + ",\n")
            else:
                killer_handle.write("   " + '"' + eventfilter_name + '"' + "\n" + ")" + "\n")
    else:
        killer_handle.write("$delete_wmi_by_wmi_eventfilter_name = $False\n")
    
    if len(malicious_wmi_eventconsumer_commandlines) > 0:
        killer_handle.write("$delete_wmi_by_wmi_eventconsumer_commandline = $True\n")
        killer_handle.write("$malicious_wmi_eventconsumer_commandlines = (\n")
        for eventconsumer_commandline in malicious_wmi_eventconsumer_commandlines:
            if eventconsumer_commandline != malicious_wmi_eventconsumer_commandlines[-1]:
                killer_handle.write("   " + '"' + eventconsumer_commandline + '"' + ",\n")
            else:
                killer_handle.write("   " + '"' + eventconsumer_commandline + '"' + "\n" + ")" + "\n")
    else:
        killer_handle.write("$delete_wmi_by_wmi_eventconsumer_commandline = $False\n")
    
    clear_malicious_wmi = open("./creator/script_temple/clear_malicious_wmi.ps1").read()
    killer_handle.write(clear_malicious_wmi)
    killer_handle.write("#" + '*'*50 + "Kill malicious wmi End Line" + '*'*50 + '\n\n')
