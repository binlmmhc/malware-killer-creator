#**************************************************Common Functons For All**************************************************
$sha256 = New-Object System.Security.Cryptography.SHA256Managed
Function hash_and_compare($file_path, $compare_hash){ 
    Try{ 
        if(Test-Path -Path $file_path){ 
            $hashdata = [System.IO.File]::Open($file_path, "open", "read")
        }

        if($hashdata){ 
            $calchash = ""
            ForEach($i in $sha256.ComputeHash($hashdata) | ForEach-Object {$_.ToString("x2")}){
                $calchash += $i 
            }
            $file_path + " " + $calchash | Out-Host

            $hashdata.dispose()
            
            if($calchash.ToUpper() -eq $compare_hash.ToUpper()){ 
                return $TRUE
            }
        }        
    }
    Catch{ 
        Write-Host "[-]Something Wrong while sha256 hash Matching." -BackgroundColor Black -ForegroundColor Red
        return $FALSE
    }
}
#**************************************************Common Functons End Line**************************************************

$delete_file_by_file_hash = $true
$malicious_file_namehashs = @{ 
    "C:\Users\binlmmhc\AppData\Local\Temp\NsCpuCNMiner32.exe"="A0EBA3FDA0D7B22A5D694105EC700DF7C7012DDC4AE611C3071EF858E2C69F08";
    "C:\Users\binlmmhc\Music\test.txt"="E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855"
}
if($delete_file_by_file_hash){ 
    Try{ 
        ForEach($filename in $malicious_file_namehashs.Keys){ 
            if(Test-Path -Path $filename){ 
                if(hash_and_compare -file_path $filename -compare_hash $malicious_file_namehashs[$filename]){ 
                    Remove-Item -Path $filename -Confirm:$false -ErrorAction SilentlyContinue
                    Write-Host "[+] Delete $filename by filehash successfully."  -ForegroundColor Green -BackgroundColor Black
                }
            }
        }
    }
    Catch{ 
        Write-Host "[-] Some thing wrong while delete file by file hash" -ForegroundColor Red -BackgroundColor Black
    }
}