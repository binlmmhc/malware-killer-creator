#**************************************************Common Functons For All**************************************************
$sha256 = New-Object System.Security.Cryptography.SHA256Managed
Function hash_and_compare($file_path, $compare_hash){ 
    Try{ 
        if(Test-Path -Path $file_path){ 
            $hashdata = [System.IO.File]::Open($file_path, "open", "read")
        }

        if($hashdata){ 
            $calchash = ""
            ForEach($i in $sha256.ComputeHash($hashdata) | ForEach-Object {$_.ToString("x2")}){
                $calchash += $i 
            }
            $file_path + " " + $calchash | Out-Host

            $hashdata.dispose()
            
            if($calchash.ToUpper() -eq $compare_hash.ToUpper()){ 
                return $TRUE
            }
        }        
    }
    Catch{ 
        Write-Host "[-]Something Wrong while sha256 hash Matching." -BackgroundColor Black -ForegroundColor Red
        return $FALSE
    }
}
#**************************************************Common Functons End Line**************************************************

#delete service by service name, and service name is not displayname
$delete_service_by_service_name = $true
$malicious_service_names = ( 
    "ErcKTIUi"
)

if($delete_service_by_service_name){ 
    Try{ 
        ForEach($malicious_service_name in $malicious_service_names){ 
            $find_service = Get-Service -Name $malicious_service_name -ErrorAction SilentlyContinue
            if($find_service){ 
                if($find_service.Status -eq "Running"){ 
                   if($find_service.CanStop){ 
                       $find_service.Stop()
                   }
                }
                $find_service.Dispose()
                sc.exe delete $malicious_service_names | Out-Null
                Write-Host "[+] Delete malicious service $malicious_service_name succesfully." -ForegroundColor Green -BackgroundColor Black
            }
        }
    }
    Catch{ 
        Write-Host "[-] Some thing wrong while delete service by service name." -BackgroundColor Black -ForegroundColor Red
    }
}

#delete service by service execute file sha256 hash
$delete_service_by_execute_file_hash = $true
$malicious_service_file_hashs = ( 
    "3C2FE308C0A563E06263BBACF793BBE9B2259D795FCC36B953793A7E499E7F71"
)

if($delete_service_by_execute_file_hash){ 
    Try{ 
        $services = Get-WmiObject -Class Win32_Service
        ForEach($service in $services ){ 
            $service_name = $service.Name        
            $service_execute_path = $service.PathName

            #$service_name + " " + $service_execute_path | Out-Host
            if($service_execute_path -like '"*"'){
                $service_execute_path = $service_execute_path.Replace('"', "")
            }

            if($service_execute_path -like "%*%*"){ 
                $service_execute_path = [System.Environment]::ExpandEnvironmentVariables($service_execute_path)
            }

            if($service_execute_path){ 
                ForEach($malicious_service_file_hash in $malicious_service_file_hashs){ 
                    if(hash_and_compare -file_path $service_execute_path -compare_hash $malicious_service_file_hash){ 
                        if($service.State -eq "Running"){ 
                            $service.StopService() | Out-Null
                        }
                        $service.delete() | Out-Null
                        Write-Host "[+] Delete malicious service $service_name succesfully." -ForegroundColor Green -BackgroundColor Black

                        if(Test-Path -Path $service_execute_path){ 
                            Remove-Item -Path $service_execute_path -Confirm:$False -ErrorAction SilentlyContinue
                            Write-Host "[+] Delete malicious service $service_name executable file succesfully." -ForegroundColor Green -BackgroundColor Black
                        }
                    }
                }
                
            }
        }
    }
    Catch{ 
        Write-Host "[-] Some thing wrong while delete service by service execute file hash." -BackgroundColor Black -ForegroundColor Red
    }
}
