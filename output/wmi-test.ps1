#**************************************************Common Functons For All**************************************************
$sha256 = New-Object System.Security.Cryptography.SHA256Managed
Function hash_and_compare($file_path, $compare_hash){ 
    Try{ 
        if(Test-Path -Path "$file_path" -ErrorAction SilentlyContinue){ 
            $hashdata = [System.IO.File]::Open($file_path, "open", "read")
        }

        if($hashdata){ 
            $calchash = ""
            ForEach($i in $sha256.ComputeHash($hashdata) | ForEach-Object {$_.ToString("x2")}){
                $calchash += $i 
            }
            #$file_path + " " + $calchash | Out-Host

            $hashdata.dispose()
            
            if($calchash.ToUpper() -eq $compare_hash.ToUpper()){ 
                return $TRUE
            }
        }        
    }
    Catch{ 
        Write-Host "[-]Something Wrong while sha256 hash Matching." -BackgroundColor Black -ForegroundColor Red
        return $FALSE
    }
}
#**************************************************Common Functons End Line**************************************************

#**************************************************Deleted malicious wmi by powershell!**************************************************
$delete_wmi_by_wmi_eventfilter_name = $True
$malicious_wmi_eventfilter_names = (
   "Updater"
)
$delete_wmi_by_wmi_eventconsumer_commandline = $True
$malicious_wmi_eventconsumer_commandlines = (
   "powershell.exe*hidden*enc"
)
#$delete_wmi_by_wmi_eventfilter_name = $True
#$malicious_wmi_eventfilter_names = ( 
#    "Updater"
#)
if($delete_wmi_by_wmi_eventfilter_name){ 
    Try{ 
        ForEach($malicious_wmi_eventfilter_name in $malicious_wmi_eventfilter_names){
            $event_filter = Get-WmiObject -Namespace root\subscription -Class __EventFilter -Filter "Name='$malicious_wmi_eventfilter_name'"
            if($event_filter){ 
                Write-Host "[+] Delete $malicious_wmi_eventfilter_name EventFilter successfully." -ForegroundColor Green -BackgroundColor black
                $event_filter | Remove-WmiObject

                $event_consumer = Get-WmiObject -Namespace root\subscription -Class CommandLineEventConsumer -Filter "Name='$malicious_wmi_eventfilter_name'"
                if($event_consumer){ 
                    Write-Host "[+] Delete $event_consumer successfully." -ForegroundColor Green -BackgroundColor black
                    $event_consumer | Remove-WmiObject
                }

                $event_filter_consumer_binder = Get-WmiObject -Namespace root\subscription -Class __FilterToConsumerBinding | Where-Object {$_.Filter -like "*$malicious_wmi_event_filter_name*"}
                if($event_filter_consumer_binder){ 
                    Write-Host "[+] Delete $malicious_wmi_eventfilter_name filter consumer binding successfully." -ForegroundColor Green -BackgroundColor black
                    $event_filter_consumer_binder | Remove-WmiObject
                }
            }
        }
    }
    Catch{ 
        Write-Host "[-] Some thing wrong while deleting wmi by name." -ForegroundColor Red -BackgroundColor black
    }
}

#$delete_wmi_by_wmi_eventconsumer_commandline = $True
#$malicious_wmi_eventconsumer_commandlines = ( 
#    "powershell.exe -NonI -W hidden -enc"
#)
if($delete_wmi_by_wmi_eventconsumer_commandline){ 
    Try{ 
        $event_consumers = Get-WmiObject -Namespace root\subscription -Class CommandLineEventConsumer
        if($event_consumers){ 
             ForEach($malicious_wmi_eventconsumer_commandline in $malicious_wmi_eventconsumer_commandlines){ 
                ForEach($event_consumer in $event_consumers){ 
                    if($event_consumer.CommandLineTemplate){ 
                        $match = $event_consumer.CommandLineTemplate -like "*$malicious_wmi_eventconsumer_commandline*"
                        if($match){ 
                            $event_consumer_name = $event_consumer.Name
                            $event_filter = Get-WmiObject -Namespace root\subscription -Class __EventFilter -Filter "Name='$event_consumer_name'"
                            if($event_filter){ 
                                Write-Host "[+] Delete $event_consumer_name EventFilter successfully." -ForegroundColor Green -BackgroundColor black
                                $event_filter | Remove-WmiObject

                                $event_filter_consumer_binder = Get-WmiObject -Namespace root\subscription -Class __FilterToConsumerBinding | Where-Object {$_.Filter -like "*$event_consumer_name*"}
                                if($event_filter_consumer_binder){ 
                                    Write-Host "[+] Delete $event_consumer_name filter consumer binding successfully." -ForegroundColor Green -BackgroundColor black
                                    $event_filter_consumer_binder | Remove-WmiObject
                                }
                            }

                            Write-Host "[+] Delete $event_consumer successfully." -ForegroundColor Green -BackgroundColor black
                            $event_consumer | Remove-WmiObject
                        }    
                    }
                }
            }
        }
    }
    Catch{ 
        Write-Host "[-] Some thing wrong while deleting wmi by event consumer commandline." -ForegroundColor red -BackgroundColor black
    }
}#**************************************************Kill malicious wmi End Line**************************************************

